[
    {
        "id": "1e78c2098878e540",
        "type": "tab",
        "label": "Termostat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6249a630e13530e8",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "867cb1db5f09b847",
        "type": "tab",
        "label": "Silownik Nastawa Manual",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85249515dfc449d5",
        "type": "tab",
        "label": "PLN Manual",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a13aec920287264",
        "type": "modbus-client",
        "name": "usb-conn",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": 502,
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "115200",
        "serialDatabits": 8,
        "serialStopbits": 1,
        "serialParity": "none",
        "serialConnectionDelay": 100,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 2,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "858b321a4adff43b",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "dark"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "17e53577a75fc993",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": 1,
        "showDisconnectNotification": true,
        "allowInstall": false
    },
    {
        "id": "27d1e4a55863a4fe",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "d961ff1262703135",
        "type": "ui-theme",
        "name": "Konsolidacja",
        "colors": {
            "surface": "#adadad",
            "primary": "#728992",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "5px",
            "groupGap": "5px",
            "groupBorderRadius": "5px",
            "widgetGap": "5px"
        }
    },
    {
        "id": "5b2a90153beb6c37",
        "type": "ui-page",
        "name": "Monitor Temperatur",
        "ui": "17e53577a75fc993",
        "path": "/chart",
        "icon": "home",
        "layout": "grid",
        "theme": "d961ff1262703135",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "402b61187877985c",
        "type": "ui-group",
        "name": "TempZewnetrzna",
        "page": "5b2a90153beb6c37",
        "width": "6",
        "height": 1,
        "order": 1,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "aa57b43bfff6a1ad",
        "type": "ui-group",
        "name": "Temp CO",
        "page": "5b2a90153beb6c37",
        "width": "6",
        "height": 1,
        "order": 3,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7a12120f48b7d954",
        "type": "ui-page",
        "name": "Krzywa Grzewcza",
        "ui": "17e53577a75fc993",
        "path": "/temps",
        "icon": "home",
        "layout": "grid",
        "theme": "27d1e4a55863a4fe",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "03b8f32c681918ed",
        "type": "ui-group",
        "name": "Pozycja",
        "page": "5b2a90153beb6c37",
        "width": 6,
        "height": 1,
        "order": 4,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "370ade6c7eb189cb",
        "type": "ui-group",
        "name": "Nastawa",
        "page": "5b2a90153beb6c37",
        "width": 6,
        "height": 1,
        "order": 2,
        "showTitle": false,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e376b59f571b9c26",
        "type": "ui-group",
        "name": "Tabela",
        "page": "7a12120f48b7d954",
        "width": 6,
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "dashboard_tab",
        "type": "ui_tab",
        "name": "Termostat",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "dashboard_group",
        "type": "ui_group",
        "name": "Harmonogram",
        "tab": "dashboard_tab",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "83a09bf0e993f5a5",
        "type": "ui-page",
        "name": "Panel Sterowania",
        "ui": "17e53577a75fc993",
        "path": "/sterowanie",
        "icon": "home",
        "layout": "grid",
        "theme": "27d1e4a55863a4fe",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "484d649bdd92edf9",
        "type": "ui-group",
        "name": "Włącznik Główny",
        "page": "83a09bf0e993f5a5",
        "width": "3",
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c8f2dcfd596c5a5b",
        "type": "ui-page",
        "name": "Harmonogram",
        "ui": "17e53577a75fc993",
        "path": "/harmonogram",
        "icon": "home",
        "layout": "grid",
        "theme": "27d1e4a55863a4fe",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "980757773314ad13",
        "type": "ui-group",
        "name": "Harmonogram",
        "page": "c8f2dcfd596c5a5b",
        "width": "2",
        "height": 1,
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2c8e29558bef67fc",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "TempCO-extract",
        "func": "msg.payload = msg.payload.data[5] / 10;\nmsg.topic = \"TempCO\";\nmsg.timestamp = new Intl.DateTimeFormat('pl-PL', {\n  hour: '2-digit', minute: '2-digit', second: '2-digit',\n  year: 'numeric', month: '2-digit', day: '2-digit',\n  hour12: false\n}).format(new Date()).replace(',', '');\n\nflow.set(\"tempco\", msg.payload);\n\nnode.status({\n  fill: \"blue\",\n  shape: \"ring\",\n  text: `TempCO: ${msg.payload} °C | Time: ${msg.timestamp}`\n});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 200,
        "wires": [
            [
                "568c2ffe47e00ceb",
                "c03008d7c7b1400a",
                "0e0c32ae656ae513"
            ]
        ]
    },
    {
        "id": "af5c63dab0f87aba",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "Pozycja-extract",
        "func": "msg.volt = msg.payload.data[0];\nmsg.payload = msg.payload.data[0];\n// / 1000;\nmsg.topic = \"Pozycja\";\nmsg.timestamp = new Intl.DateTimeFormat('pl-PL', {\n  hour: '2-digit', minute: '2-digit', second: '2-digit',\n  year: 'numeric', month: '2-digit', day: '2-digit',\n  hour12: false\n}).format(new Date()).replace(',', '');\n\nflow.set(\"pozycja\", msg.payload);\n\nnode.status({\n  fill: \"blue\",\n  shape: \"dot\",\n  text: `Pozycja: ${msg.payload} | Time: ${msg.timestamp}`\n});\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 260,
        "wires": [
            [
                "bd09d6777578e0a1",
                "8b78f5a8abf76e4d"
            ]
        ]
    },
    {
        "id": "54eedb2aa9a6fc18",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "TempZEW-extract",
        "func": "msg.payload = msg.payload.data[4] / 10;\nmsg.topic = \"TempZEW\";\nmsg.timestamp = new Intl.DateTimeFormat('pl-PL', {\n  hour: '2-digit', minute: '2-digit', second: '2-digit',\n  year: 'numeric', month: '2-digit', day: '2-digit',\n  hour12: false\n}).format(new Date()).replace(',', '');\n\nflow.set(\"tempzew\", msg.payload);\n\nnode.status({\n  fill: \"blue\",\n  shape: \"ring\",\n  text: `TempZEW: ${msg.payload} °C | Time: ${msg.timestamp}`\n});\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 140,
        "wires": [
            [
                "9d6f3c55beed1de2"
            ]
        ]
    },
    {
        "id": "9d6f3c55beed1de2",
        "type": "data-view",
        "z": "1e78c2098878e540",
        "name": "",
        "property": "payload",
        "fieldType": "msg",
        "width": "600",
        "height": 160,
        "points": "40",
        "active": true,
        "passthru": false,
        "hide": true,
        "outputs": 0,
        "x": 870,
        "y": 60,
        "wires": []
    },
    {
        "id": "c03008d7c7b1400a",
        "type": "data-view",
        "z": "1e78c2098878e540",
        "name": "",
        "property": "payload",
        "fieldType": "msg",
        "width": "600",
        "height": 160,
        "points": "40",
        "active": true,
        "passthru": false,
        "hide": true,
        "outputs": 0,
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "bd09d6777578e0a1",
        "type": "data-view",
        "z": "1e78c2098878e540",
        "name": "",
        "property": "payload",
        "fieldType": "msg",
        "width": "600",
        "height": 160,
        "points": "40",
        "active": true,
        "passthru": false,
        "hide": true,
        "outputs": 0,
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "a3d43e6609be7e87",
        "type": "modbus-read",
        "z": "1e78c2098878e540",
        "name": "PLC-READ",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "4",
        "quantity": "6",
        "rate": "15",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "2a13aec920287264",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 110,
        "y": 40,
        "wires": [
            [],
            [
                "54eedb2aa9a6fc18",
                "2c8e29558bef67fc",
                "af5c63dab0f87aba"
            ]
        ]
    },
    {
        "id": "0e0c32ae656ae513",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "Termostat",
        "func": "let tempNastawa = Number(flow.get(\"temperatura_nastawa\")) || 0;\nlet maxPozycja = 5000;\nlet minPozycja = 0;\n\nlet stan = \"grey\";\n\n// harmonogram\nlet aktywny = flow.get(\"aktywny\") ?? true;\n\n// pozycja siłownika\nlet pozycja = flow.get(\"pozycja\") || 0;\n\n// temperatura zewnętrzna\nlet tempZew = Number(flow.get(\"tempzew\")) || 0;\n\n// bieżąca temperatura z msg.payload[0]\nlet tempCO = Number(msg.payload);\n\n// różnica temperatur\nlet delta = tempNastawa - tempCO; \n\n// --- licznik cykli ---\nlet cykl = flow.get(\"cykl\") || 0;\ncykl++;\nif (cykl > 1000) cykl = 0; // reset co 1000\nflow.set(\"cykl\", cykl);\n\n// minimalny skok\nlet minSkok = 100;\nlet skok = 0;\n\nif (aktywny) {\n    // logika skoku: szybkie nagrzewanie i stabilizacja\n    if (delta > 8) skok = 1500;\n    else if (delta > 5) skok = 1000;\n    else if (delta > 2) skok = 500;\n    else if (delta > 0.5) skok = 100;\n    else skok = 0;\n\n    if (skok < minSkok) skok = minSkok;\n\n    // regulacja siłownika\n    \n    stan = \"black\";\n\n    if (delta > 0.5) { \n        stan = \"red\"; \n        pozycja = pozycja + skok; \n    } else if (delta < -0.5) { \n        stan = \"blue\"; \n        pozycja = pozycja - skok; \n    } else { \n        stan = \"green\"; \n    }\n} else {\n    // poza harmonogramem → OFF\n    stan = \"grey\";\n    skok = 0;\n    pozycja = 0;\n}\n// ograniczenie zakresu i wartości całkowitej\npozycja = Math.max(minPozycja, Math.min(maxPozycja, Math.round(pozycja)));\n\nflow.set(\"pozycja\", pozycja, \"default\");\n\n// --- przygotowanie logu do pliku ---\nlet logLine = `${new Date().toLocaleString(\"pl-PL\")}, TempNastawa: ${tempNastawa.toFixed(1)}, TempObecna: ${tempCO.toFixed(1)}, TempZewn: ${tempZew.toFixed(1)}, Delta: ${delta.toFixed(2)}, Pozycja: ${pozycja}, Skok: ${skok}, Cykl: ${cykl}, Harmonogram: ${aktywny ? \"ON\" : \"OFF\"}`;\n\n\n// --- status node ---\nnode.status({\n    fill: stan,\n    shape: \"ring\",\n    text: `POZYCJA: ${pozycja} | DELTA: ${delta.toFixed(1)} | SKOK: ${skok} | CYKL: ${cykl} | ${aktywny?\"AKTYWNY\":\"WYŁ\"}`\n});\n\n// --- WYJŚCIE 1 → sterownik ---\nlet out1 = { payload: pozycja };\n\n// --- WYJŚCIE 2 → log do pliku ---\nlet out2 = { payload: logLine };\n\n// Zwracamy oba wyjścia\nreturn [out1, out2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "cf8d225c092417f5"
            ],
            [
                "a181afc9dcf4f025"
            ]
        ]
    },
    {
        "id": "cf8d225c092417f5",
        "type": "modbus-write",
        "z": "1e78c2098878e540",
        "name": "Siłownik",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "4",
        "quantity": "1",
        "server": "2a13aec920287264",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 620,
        "y": 140,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a181afc9dcf4f025",
        "type": "file",
        "z": "1e78c2098878e540",
        "name": "",
        "filename": "/tmp/file.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 630,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8b78f5a8abf76e4d",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "Nastawa - Krzywa Temperatur",
        "func": "// Pobieramy temperaturę zewnętrzną z flow\nlet tempzew = Number(flow.get(\"tempzew\")) || 0;\n\n// Tworzymy dwuwymiarową tablicę z przykładowymi wartościami\n// format: [ [temp_zew, temp_nastawa], ... ]\nlet tabelaNastaw = [\n    [-20, 55],\n    [-10, 50],\n    [0, 50],\n    [5, 45],\n    [10, 43],\n    [11, 42],\n    [12, 20],\n    [13, 20],\n    [14, 20],\n    [15, 20],\n    [20, 20]\n];\n\nflow.set(\"tabelaNastaw\", tabelaNastaw);\n\n// Funkcja, która wybiera nastawę na podstawie tempzew\n// tutaj prosta interpolacja liniowa między punktami tabeli\nfunction obliczNastawa(tempzew, tabela) {\n    for (let i = 0; i < tabela.length - 1; i++) {\n        let [t1, n1] = tabela[i];\n        let [t2, n2] = tabela[i + 1];\n        if (tempzew >= t1 && tempzew <= t2) {\n            // interpolacja liniowa\n            let nastawa = n1 + (n2 - n1) * (tempzew - t1) / (t2 - t1);\n            return Number(nastawa.toFixed(1)); // zaokrąglenie do 1 miejsca\n        }\n    }\n    // jeśli tempzew poza zakresem, zwracamy krańcową wartość\n    if (tempzew < tabela[0][0]) return Number(tabela[0][1].toFixed(1));\n    if (tempzew > tabela[tabela.length - 1][0]) return Number(tabela[tabela.length - 1][1].toFixed(1));\n}\n\n// obliczamy temperaturę nastawy\nlet tempNastawa = obliczNastawa(tempzew, tabelaNastaw);\n\n// zapis do flow\nflow.set(\"temperatura_nastawa\", tempNastawa);\n\n// --- status node ---\nnode.status({\n    fill: \"grey\",\n    shape: \"ring\",\n    text: `tempNastawa: ${tempNastawa} `\n});\n\n// dla debugu wyjście msg\nmsg.payload = { tempzew, tempNastawa, tabelaNastaw };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 460,
        "wires": [
            [
                "5fa8e9a784e119d4"
            ]
        ]
    },
    {
        "id": "568c2ffe47e00ceb",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "Dla ThingSpeak i Dashboard",
        "func": "// Pobieramy temperaturę zewnętrzną z flow\nlet tempzew = Number(flow.get(\"tempzew\")) || 0;\nlet tempco = Number(flow.get(\"tempco\")) || 0;\nlet pozycja = Number(flow.get(\"pozycja\")) || 0;\nlet aktywny = Number(flow.get(\"aktywny\")) || 0;\nlet temperatura_nastawa = Number(flow.get(\"temperatura_nastawa\")) || 0;\nlet dashdata = 0;\n\n// Tworzymy URL do ThingSpeak\nlet writeAPIKey = \"DR68GTX4J0WJA08J\";\nlet url = `https://api.thingspeak.com/update?api_key=${writeAPIKey}&field1=${tempzew}&field2=${tempco}&field3=${pozycja}`;\n\n// Przekazujemy URL do HTTP request node\nmsg.url = url;\n//msg.method = \"GET\"; // GET dla prostego zapisu\n//return msg;\n\n// --- WYJŚCIE 1 → dla thingspeak ---\nlet out1 = { url: url };\n\n// --- WYJŚCIE 2 → dashboard ---\nlet out2 = { tempzew: tempzew, tempco: tempco, pozycja: pozycja, temperatura_nastawa: temperatura_nastawa, aktywny: aktywny };\n\n// Zwracamy oba wyjścia\nreturn [out1, out2];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 40,
        "wires": [
            [
                "2c19ecde5a031fbf"
            ],
            [
                "00ddd83ad047e45b"
            ]
        ]
    },
    {
        "id": "b888b715ed15d9f2",
        "type": "http request",
        "z": "1e78c2098878e540",
        "name": "ThingSpeak",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "2c19ecde5a031fbf",
        "type": "delay",
        "z": "1e78c2098878e540",
        "name": "",
        "pauseType": "rate",
        "timeout": "30",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 20,
        "wires": [
            [
                "b888b715ed15d9f2"
            ]
        ]
    },
    {
        "id": "00ddd83ad047e45b",
        "type": "link out",
        "z": "1e78c2098878e540",
        "name": "GoToDash",
        "mode": "link",
        "links": [
            "0876e49f1e67ae60"
        ],
        "x": 585,
        "y": 60,
        "wires": []
    },
    {
        "id": "5fa8e9a784e119d4",
        "type": "link out",
        "z": "1e78c2098878e540",
        "name": "GoToTabela",
        "mode": "link",
        "links": [
            "f4542dcb0e25ccd7"
        ],
        "x": 425,
        "y": 460,
        "wires": []
    },
    {
        "id": "7bb76db9a3963f1c",
        "type": "link in",
        "z": "1e78c2098878e540",
        "name": "Włącznik flow aktywny",
        "links": [
            "3242a61540e3a11f"
        ],
        "x": 145,
        "y": 540,
        "wires": [
            [
                "4d48bd97950573eb"
            ]
        ]
    },
    {
        "id": "4d48bd97950573eb",
        "type": "function",
        "z": "1e78c2098878e540",
        "name": "Set ON OFF Flow",
        "func": "\nflow.set(\"aktywny\",msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "0876e49f1e67ae60",
        "type": "link in",
        "z": "6249a630e13530e8",
        "name": "link in 1",
        "links": [
            "00ddd83ad047e45b"
        ],
        "x": 175,
        "y": 40,
        "wires": [
            [
                "27e0b1a1685cd8b1",
                "19027639cd1c84f9",
                "8a16b396e782a607"
            ]
        ]
    },
    {
        "id": "27e0b1a1685cd8b1",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "rozdziel",
        "func": "let tempzew = msg.tempzew;\nlet tempco = msg.tempco;\nlet pozycja = msg.pozycja;\nlet tempNastawa = msg.temperatura_nastawa;\n\nlet out1 = { \n    payload: tempzew,\n    ui_update: { \n        label: \"🌡️ Temp. Zewnętrzna\",\n        fontSize: \"22px\",\n        color: tempzew < 0 ? \"blue\" : \"red\"\n    },\n    class: \"moj-widget\"   // tu możesz dodać własną klasę CSS\n};\n\nlet out2 = { \n    payload: tempco, \n    ui_update: { label: \"🔥 Temp. CO\" } \n};\n\nlet out3 = { \n    payload: pozycja, \n    ui_update: { label: \"⚙️ Pozycja Siłownika\" } \n};\n\nlet out4 = { \n    payload: tempNastawa, \n    ui_update: { label: \"🎛️ Temp. Nastawa\" } \n};\n\nreturn [out1, out2, out3, out4];\n\n",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 40,
        "wires": [
            [
                "29303f6b47338634",
                "ui_text_tempzew"
            ],
            [
                "7bab3e7370cace8d",
                "ui_text_tempco",
                "36418cb08ab2119c"
            ],
            [
                "8e93df1fe23a3b9b",
                "75d874d8ec2ad3dc",
                "ui_text_pozycja"
            ],
            [
                "7713b4ecfc3a32b3",
                "ui_text_nastawa"
            ]
        ]
    },
    {
        "id": "0928419add0a48a2",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "function 1",
        "func": "let tabela = flow.get(\"tabelaNastaw\");\n// node.warn(\"FLOW.TABELA: \" + JSON.stringify(tabela));\n\n// if (!Array.isArray(tabela) || tabela.length === 0) {\n//     node.warn(\"Tabela jest pusta, ustawiam domyślną\");\n//     tabela = [[-20,55],[-10,50],[0,50],[5,47],[10,45],[11,42],[12,40],[13,38],[14,35],[15,20],[20,20]];\n//     flow.set(\"tabelaNastaw\", tabela);\n// }\n\nmsg.payload = tabela.map(r => ({\n    tempzew: r[0],\n    nastawa: r[1]\n}));\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 420,
        "wires": [
            [
                "72e0b7094174cae2"
            ]
        ]
    },
    {
        "id": "f4542dcb0e25ccd7",
        "type": "link in",
        "z": "6249a630e13530e8",
        "name": "Tabela",
        "links": [
            "5fa8e9a784e119d4"
        ],
        "x": 175,
        "y": 340,
        "wires": [
            [
                "0928419add0a48a2"
            ]
        ]
    },
    {
        "id": "75d874d8ec2ad3dc",
        "type": "debug",
        "z": "6249a630e13530e8",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 200,
        "wires": []
    },
    {
        "id": "edb77486ae16c09f",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "function 2",
        "func": "// msg.payload = [{tempzew: -20, tempNastawa: 55}, ...] po edycji\nlet tabelaNowa = msg.payload.map(r => [Number(r.tempzew), Number(r.tempNastawa)]);\nflow.set(\"tabelaNastaw\", tabelaNowa);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "29303f6b47338634",
        "type": "ui-chart",
        "z": "6249a630e13530e8",
        "group": "402b61187877985c",
        "name": "Temp ZEW",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "",
        "categoryType": "none",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "-10",
        "ymax": "20",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": "4",
        "showLegend": true,
        "removeOlder": "4",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "3",
        "className": "",
        "interpolation": "linear",
        "x": 830,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "7bab3e7370cace8d",
        "type": "ui-chart",
        "z": "6249a630e13530e8",
        "group": "aa57b43bfff6a1ad",
        "name": "Temp CO",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "",
        "categoryType": "none",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "20",
        "ymax": "70",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": false,
        "removeOlder": "4",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "3",
        "className": "",
        "interpolation": "linear",
        "x": 820,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "8e93df1fe23a3b9b",
        "type": "ui-chart",
        "z": "6249a630e13530e8",
        "group": "03b8f32c681918ed",
        "name": "Pozycja",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "",
        "categoryType": "none",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "",
        "ymax": "",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "4",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "3",
        "className": "",
        "interpolation": "linear",
        "x": 820,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7713b4ecfc3a32b3",
        "type": "ui-chart",
        "z": "6249a630e13530e8",
        "group": "370ade6c7eb189cb",
        "name": "Temp Nastawa",
        "label": "",
        "order": 2,
        "chartType": "line",
        "category": "",
        "categoryType": "none",
        "xAxisLabel": "",
        "xAxisProperty": "",
        "xAxisPropertyType": "timestamp",
        "xAxisType": "time",
        "xAxisFormat": "",
        "xAxisFormatType": "auto",
        "xmin": "",
        "xmax": "",
        "yAxisLabel": "",
        "yAxisProperty": "payload",
        "yAxisPropertyType": "msg",
        "ymin": "20",
        "ymax": "70",
        "bins": 10,
        "action": "append",
        "stackSeries": false,
        "pointShape": "circle",
        "pointRadius": 4,
        "showLegend": true,
        "removeOlder": "4",
        "removeOlderUnit": "3600",
        "removeOlderPoints": "",
        "colors": [
            "#0095ff",
            "#ff0000",
            "#ff7f0e",
            "#2ca02c",
            "#a347e1",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "textColor": [
            "#666666"
        ],
        "textColorDefault": true,
        "gridColor": [
            "#e5e5e5"
        ],
        "gridColorDefault": true,
        "width": "6",
        "height": "3",
        "className": "",
        "interpolation": "linear",
        "x": 840,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ui_text_tempzew",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "402b61187877985c",
        "order": 1,
        "width": "4",
        "height": 1,
        "name": "Temp Zew",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 850,
        "y": 380,
        "wires": []
    },
    {
        "id": "ui_text_tempco",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "aa57b43bfff6a1ad",
        "order": 1,
        "width": "4",
        "height": 1,
        "name": "Temp CO",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 840,
        "y": 420,
        "wires": []
    },
    {
        "id": "ui_text_pozycja",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "03b8f32c681918ed",
        "order": 1,
        "width": "4",
        "height": 1,
        "name": "Pozycja",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 840,
        "y": 460,
        "wires": []
    },
    {
        "id": "ui_text_nastawa",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "370ade6c7eb189cb",
        "order": 1,
        "width": "4",
        "height": 1,
        "name": "Temp Nastawa",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 860,
        "y": 500,
        "wires": []
    },
    {
        "id": "72e0b7094174cae2",
        "type": "ui-table",
        "z": "6249a630e13530e8",
        "group": "e376b59f571b9c26",
        "name": "",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "deselect": true,
        "selectionType": "click",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "replace",
        "className": "",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "edb77486ae16c09f"
            ]
        ]
    },
    {
        "id": "ui_start",
        "type": "ui_text_input",
        "z": "6249a630e13530e8",
        "name": "Godzina start",
        "label": "Start",
        "tooltip": "Ustaw godzinę start (HH:MM)",
        "group": "dashboard_group",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "start",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "set_start"
            ]
        ]
    },
    {
        "id": "ui_stop",
        "type": "ui_text_input",
        "z": "6249a630e13530e8",
        "name": "Godzina stop",
        "label": "Stop",
        "tooltip": "Ustaw godzinę stop (HH:MM)",
        "group": "dashboard_group",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "stop",
        "x": 1050,
        "y": 440,
        "wires": [
            [
                "set_stop"
            ]
        ]
    },
    {
        "id": "set_start",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "Zapisz start",
        "func": "global.set(\"start\", msg.payload);\nreturn null;",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 380,
        "wires": []
    },
    {
        "id": "set_stop",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "Zapisz stop",
        "func": "global.set(\"stop\", msg.payload);\nreturn null;",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 440,
        "wires": []
    },
    {
        "id": "b4b9cb347c2373ed",
        "type": "ui-switch",
        "z": "6249a630e13530e8",
        "name": "Włacznik Główny",
        "label": "Włącznik Ogrzewania",
        "group": "484d649bdd92edf9",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-spread",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 1010,
        "y": 300,
        "wires": [
            [
                "3242a61540e3a11f"
            ]
        ]
    },
    {
        "id": "04815bd0b7795a85",
        "type": "ui-text-input",
        "z": "6249a630e13530e8",
        "group": "980757773314ad13",
        "name": "Harmonogram Start",
        "label": "START",
        "order": 1,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "time",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 1150,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d17de3c53b4cc6c3",
        "type": "ui-text-input",
        "z": "6249a630e13530e8",
        "group": "980757773314ad13",
        "name": "Harmonogram Stop",
        "label": "STOP",
        "order": 2,
        "width": 0,
        "height": 0,
        "topic": "topic",
        "topicType": "msg",
        "mode": "time",
        "tooltip": "",
        "delay": 300,
        "passthru": true,
        "sendOnDelay": false,
        "sendOnBlur": true,
        "sendOnEnter": true,
        "className": "",
        "clearable": false,
        "sendOnClear": false,
        "icon": "",
        "iconPosition": "left",
        "iconInnerPosition": "inside",
        "x": 1150,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "52c3b39ee0f9fdd9",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "484d649bdd92edf9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stan Węzła",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 430,
        "y": 200,
        "wires": []
    },
    {
        "id": "3242a61540e3a11f",
        "type": "link out",
        "z": "6249a630e13530e8",
        "name": "Dashboard Switch ON OFF",
        "mode": "link",
        "links": [
            "7bb76db9a3963f1c"
        ],
        "x": 1215,
        "y": 300,
        "wires": []
    },
    {
        "id": "d283e712b7285721",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "484d649bdd92edf9",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Nastawa z krzywej",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "temperatura_nastawa",
        "valueType": "msg",
        "x": 450,
        "y": 260,
        "wires": []
    },
    {
        "id": "19027639cd1c84f9",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "add degree",
        "func": "msg.temperatura_nastawa = msg.temperatura_nastawa + \" &deg;C\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 260,
        "wires": [
            [
                "d283e712b7285721"
            ]
        ]
    },
    {
        "id": "8a16b396e782a607",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "Change Value",
        "func": "if (msg.aktywny) msg.payload = \"ON\"\nif (!msg.aktywny) msg.payload = \"OFF\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 200,
        "wires": [
            [
                "52c3b39ee0f9fdd9",
                "dc65b2214a6a4654"
            ]
        ]
    },
    {
        "id": "dc65b2214a6a4654",
        "type": "debug",
        "z": "6249a630e13530e8",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 140,
        "wires": []
    },
    {
        "id": "e7ae46dcbf10ff6f",
        "type": "ui-text",
        "z": "6249a630e13530e8",
        "group": "484d649bdd92edf9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temp CO",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "value": "payload",
        "valueType": "msg",
        "x": 1200,
        "y": 80,
        "wires": []
    },
    {
        "id": "36418cb08ab2119c",
        "type": "function",
        "z": "6249a630e13530e8",
        "name": "add degree",
        "func": "msg.payload= msg.payload + \" &deg;C\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 80,
        "wires": [
            [
                "e7ae46dcbf10ff6f"
            ]
        ]
    },
    {
        "id": "6f48287671bc7669",
        "type": "modbus-write",
        "z": "867cb1db5f09b847",
        "name": "Siłownik",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "4",
        "quantity": "1",
        "server": "2a13aec920287264",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 480,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b475f31fb4451340",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2000",
        "payloadType": "num",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "4cc43dc53755b3c3",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1000",
        "payloadType": "num",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "e174f24121d7f44a",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3000",
        "payloadType": "num",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "ebdd0246e3415148",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4000",
        "payloadType": "num",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "c4ebc7abbda93c83",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3200",
        "payloadType": "num",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "085e699e22f5190c",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3400",
        "payloadType": "num",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "0a25dd8c6c0027c5",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3600",
        "payloadType": "num",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "3a60b24f2cd78f44",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2700",
        "payloadType": "num",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "48d5389df93311f2",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2500",
        "payloadType": "num",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "9a326f3691aa0f2c",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "6f48287671bc7669"
            ]
        ]
    },
    {
        "id": "ce837d21c6f37d93",
        "type": "comment",
        "z": "867cb1db5f09b847",
        "name": "test",
        "info": "",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "c1f3a1abf3c1d111",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "43",
        "payloadType": "num",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "f5a1b2c3d4e5f678"
            ]
        ]
    },
    {
        "id": "f5a1b2c3d4e5f678",
        "type": "change",
        "z": "867cb1db5f09b847",
        "name": "Zapisz do flow.temperatura_nastawa",
        "rules": [
            {
                "t": "set",
                "p": "temperatura_nastawa",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 430,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a2b3c4d5e6f7a890",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "Odczytaj nastawę",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "b3c4d5e6f7a8b901"
            ]
        ]
    },
    {
        "id": "b3c4d5e6f7a8b901",
        "type": "function",
        "z": "867cb1db5f09b847",
        "name": "Pobierz flow.temperatura_nastawa",
        "func": "let nastawa = flow.get(\"temperatura_nastawa\") || 0;\nmsg.payload = \"Aktualna nastawa: \" + nastawa + \" °C\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 540,
        "wires": [
            [
                "d4e5f6a7b8c9d012"
            ]
        ]
    },
    {
        "id": "d4e5f6a7b8c9d012",
        "type": "debug",
        "z": "867cb1db5f09b847",
        "name": "Podgląd nastawy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 460,
        "wires": []
    },
    {
        "id": "5dae5dcf549808d3",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "33",
        "payloadType": "num",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "f5a1b2c3d4e5f678"
            ]
        ]
    },
    {
        "id": "d1f0d5f18d78a9e0",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "f5a1b2c3d4e5f678"
            ]
        ]
    },
    {
        "id": "d237c4be8fc56eb9",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "27",
        "payloadType": "num",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "f5a1b2c3d4e5f678"
            ]
        ]
    },
    {
        "id": "878f10a53dd86c8c",
        "type": "inject",
        "z": "867cb1db5f09b847",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "f5a1b2c3d4e5f678"
            ]
        ]
    },
    {
        "id": "0eccd18fcd4a9b44",
        "type": "modbus-write",
        "z": "85249515dfc449d5",
        "name": "Off Simple PLC Program 118",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "118",
        "quantity": "1",
        "server": "2a13aec920287264",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 420,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a2f8f9231c0240da",
        "type": "inject",
        "z": "85249515dfc449d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "0eccd18fcd4a9b44"
            ]
        ]
    },
    {
        "id": "b4a5c6b9a8798535",
        "type": "modbus-write",
        "z": "85249515dfc449d5",
        "name": "Off Simple PLC Program 100",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "100",
        "quantity": "1",
        "server": "2a13aec920287264",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 420,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "daa70b52f74fd2b4",
        "type": "inject",
        "z": "85249515dfc449d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "0eccd18fcd4a9b44"
            ]
        ]
    },
    {
        "id": "53fa855dc695dd45",
        "type": "modbus-read",
        "z": "85249515dfc449d5",
        "name": "PLC-Task",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "100",
        "quantity": "19",
        "rate": "15",
        "rateUnit": "s",
        "delayOnStart": true,
        "startDelayTime": "1",
        "server": "2a13aec920287264",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 140,
        "y": 100,
        "wires": [
            [],
            [
                "097df399214566b1",
                "812524f4bc51b371"
            ]
        ]
    },
    {
        "id": "097df399214566b1",
        "type": "function",
        "z": "85249515dfc449d5",
        "name": "PLC100",
        "func": "msg.timestamp = new Intl.DateTimeFormat('pl-PL', {\n  hour: '2-digit', minute: '2-digit', second: '2-digit',\n  year: 'numeric', month: '2-digit', day: '2-digit',\n  hour12: false\n}).format(new Date()).replace(',', '');\n\nflow.set(\"plc100\", msg.payload.data[0]);\nflow.set(\"plc101\", msg.payload.data[1]);\nflow.set(\"plc118\", msg.payload.data[18]);\n\nnode.status({\n  fill: \"blue\",\n  shape: \"ring\",\n  text: `PLC: ${msg.payload.data[0]} | ${msg.payload.data[1]} | ${msg.payload.data[18]} | Time: ${msg.timestamp}`\n});\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "812524f4bc51b371",
        "type": "debug",
        "z": "85249515dfc449d5",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "8cf97f8067a9d5a6",
        "type": "inject",
        "z": "85249515dfc449d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "b4a5c6b9a8798535"
            ]
        ]
    },
    {
        "id": "66f04218c4e4b0e7",
        "type": "inject",
        "z": "85249515dfc449d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 310,
        "y": 460,
        "wires": [
            [
                "0eccd18fcd4a9b44"
            ]
        ]
    },
    {
        "id": "73f10be44a52ecdb",
        "type": "inject",
        "z": "85249515dfc449d5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "b4a5c6b9a8798535"
            ]
        ]
    }
]